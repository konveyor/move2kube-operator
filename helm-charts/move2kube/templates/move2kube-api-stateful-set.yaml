apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}-move2kubeapi"
  labels:
    move2kube.konveyor.io/service: "{{ .Release.Name }}-move2kubeapi"
spec:
  replicas: {{ .Values.deployment.api.replicas }}
  selector:
    matchLabels:
      move2kube.konveyor.io/service: "{{ .Release.Name }}-move2kubeapi"
  serviceName: "{{ .Release.Name }}-move2kubeapiheadless"
  template:
    metadata:
      labels:
        move2kube.konveyor.io/service: "{{ .Release.Name }}-move2kubeapi"
      name: "{{ .Release.Name }}-move2kubeapi"
    spec:
      {{- if .Values.serviceAccount.enable }}
      serviceAccountName: '{{ .Values.serviceAccount.name | default (print .Release.Name "-move2kube") }}'
      {{- end }}
      containers:
        - name: move2kubeapi
          image: "quay.io/konveyor/move2kube-api:{{ .Values.deployment.api.imageTag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          {{- if .Values.deployment.api.privilegedPods }}
          securityContext:
            privileged: true
          {{- end }}
          volumeMounts:
            - mountPath: /workspace
              name: common-volume
            - mountPath: /var/lib/containers
              name: container-storage
      initContainers:
        - name: initcontainer
          image: quay.io/konveyor/busybox
          command: ["/bin/sh", "-c"]
          args:
            - chmod -R a+rwx /workspace;
          volumeMounts:
          - name: common-volume
            mountPath: /workspace
      restartPolicy: Always
      volumes:
        - name: common-volume
          {{- if .Values.persistentVolumeClaim.enable }}
          persistentVolumeClaim:
            claimName: '{{ .Values.persistentVolumeClaim.name | default (print .Release.Name "-move2kubeapi") }}'
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: container-storage
          emptyDir: {}
