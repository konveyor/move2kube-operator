apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    move2kube.konveyor.io/service: {{ .Release.Name }}-move2kubeapi
  name: {{ .Release.Name }}-move2kubeapi
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      move2kube.konveyor.io/service: {{ .Release.Name }}-move2kubeapi
  serviceName: {{ .Release.Name }}-move2kubeapiheadless
  template:
    metadata:
      labels:
        move2kube.konveyor.io/service: {{ .Release.Name }}-move2kubeapi
      name: {{ .Release.Name }}-move2kubeapi
    spec:
      {{- if .Values.useExistingServiceAccount }}
      serviceAccountName: {{ .Values.useExistingServiceAccount }}
      {{- else }}
      serviceAccountName: {{ .Release.Name }}-move2kube
      {{- end }}
      containers:
        - image: quay.io/konveyor/move2kube-api:{{ .Values.image_tag | default .Chart.AppVersion }}
          imagePullPolicy: Always
          name: move2kubeapi
          ports:
            - containerPort: 8080
              protocol: TCP
          {{- if .Values.privileged }}
          securityContext:
            privileged: true
          {{- end }}
          resources: {}
          volumeMounts:
            - mountPath: /workspace
              name: common-volume
            - mountPath: /var/lib/containers
              name: container-storage
      initContainers:
        - name: initcontainer
          image: quay.io/konveyor/busybox
          command: ["/bin/sh", "-c"]
          args:
            - chmod -R a+rwx /workspace;
          volumeMounts:
          - name: common-volume
            mountPath: /workspace
      restartPolicy: Always
      volumes:
        - name: common-volume
          persistentVolumeClaim:
            {{- if .Values.api.useExistingPVC }}
            claimName: {{ .Values.api.useExistingPVC }}
            {{- else }}
            claimName: {{ .Release.Name }}-move2kubeapi
            {{- end }}
        - name: container-storage
          emptyDir: {}
